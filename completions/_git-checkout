#compdef git-checkout
#description checkout any branch by matching partial branch name or commit hash

_git-checkout() {
  # I don't know what's the purpose of this line
  local curcontext=$curcontext state line ret=1

  # some global variables are made available to completions scripts :
  #
  # $CURRENT is the index of the args we are trying to complete
  # $words is an array containing all args of the command
  # exemple :
  #   git checkout -t dev[TAB]
  #   => $words = checkout -t dev
  #   => $words[$CURRENT] = dev
  arg1=$words[$CURRENT]

  # normal completion if first arg begins with - (dash)
  if [[ "$arg1" == --* ]]
  then
    return 0
  fi

  if [[ "$arg1" != "" ]]
  then
    arg1=${arg1//'.'/'\\.'}
    arg1=${arg1//'-'/'\\-'}
    branchListCommand="git branch | grep $arg1 | grep -v detached"
    branchesCount=`eval "$branchListCommand -c"`
    branches=`eval "$branchListCommand"`

    # if no local branch found, search in remotes
    if [ $branchesCount -eq 0 ]
    then
      branchListCommand="git branch -r | grep $arg1 | grep -v detached"
      branchesCount=`eval "$branchListCommand -c"`
      branches=`eval "$branchListCommand"`
    fi



    _alternative "args::($branches)" && ret=0
  fi

  return ret
}

_git-checkout "$@"
